suite: Sealed Secrets

templates:
  - sealed-secret-config.yaml

tests:
  - it: should be empty by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should have a sealed secret for config files if specified
    release:
      name: unpackerr
    set:
      config:
        file:
          sealed: "example"
    asserts:
      - containsDocument:
          apiVersion: bitnami.com/v1alpha1
          kind: SealedSecret
          name: unpackerr-config-file
      - hasDocuments:
          count: 1
      - equal:
          path: spec.encryptedData["unpackerr.conf"]
          value: example

  - it: should have a sealed secret for environment variables if specified
    release:
      name: unpackerr
    set:
      config:
        env:
          sealed:
            EXAMPLE_ENV: "example_value"
    asserts:
      - containsDocument:
          apiVersion: bitnami.com/v1alpha1
          kind: SealedSecret
          name: unpackerr-env
      - hasDocuments:
          count: 1
      - equal:
          path: spec.encryptedData["EXAMPLE_ENV"]
          value: example_value

  - it: should fail if both existingSecret and sealed are used for config.env
    release:
      name: unpackerr
    set:
      config:
        env:
          existingSecret: "example_secret"
          sealed:
            EXAMPLE_ENV: "example_value"
    asserts:
      - failedTemplate:
          errorPattern: ".* cannot use both existingSecret and sealed .*"

  - it: should fail if both existingSecret and sealed are used for config.file
    release:
      name: unpackerr
    set:
      config:
        file:
          existingSecret: "example_secret"
          sealed: "example_value"
    asserts:
      - failedTemplate:
          errorPattern: ".* cannot use both existingSecret and sealed .*"
